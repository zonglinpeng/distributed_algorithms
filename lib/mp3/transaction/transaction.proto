syntax = "proto3";

option go_package = "github.com/zonglinpeng/distributed_algorithms/lib/mp3/transaction";
package transaction;

service Transaction {
  rpc Begin(BeginReq) returns (BeginRes) {}
  rpc Deposit(DepositReq) returns (DepositRes) {}
  rpc Balance(BalanceReq) returns (BalanceRes) {}
  rpc WithDraw(WithDrawReq) returns (WithDrawRes) {}
  rpc TryCommit(TryCommitReq) returns (TryCommitRes) {}
  rpc Commit(CommitReq) returns (CommitRes) {}
  rpc Abort(AbortReq) returns (AbortRes) {}
}

message BeginReq {
  string clientID = 1;
  int64 transactionSeq = 2;
}

message BeginRes {
  bool isOk = 1;
  int64 transactionSeq = 2;
}

message DepositReq {
  string clientID = 1;
  string server = 2;
  string account = 3;
  int64 amount = 4;
  int64 transactionSeq = 5;
}

message DepositRes {
  bool isOk = 1;
  int64 transactionSeq = 2;
}

message BalanceReq {
  string clientID = 1;
  string server = 2;
  string account = 3;
  int64 transactionSeq = 4;
}

message BalanceRes {
  bool isAccountExist = 1;
  int64 amount = 2;
  int64 transactionSeq = 3;
}

message WithDrawReq {
  string clientID = 1;
  string server = 2;
  string account = 3;
  int64 amount = 4;
  int64 transactionSeq = 5;
}

message WithDrawRes {
  bool isAccountExist = 1;
  bool isOk = 2;
  int64 transactionSeq = 3;
}

message TryCommitReq {
  string clientID = 1;
  int64 transactionSeq = 2;
}

message TryCommitRes {
  bool isOk = 1;
  int64 transactionSeq = 2;
}

message CommitReq {
  string clientID = 1;
  int64 transactionSeq = 2;
}

message CommitRes {
  bool isOk = 1;
  int64 transactionSeq = 2;
}

message AbortReq {
  string clientID = 1;
  int64 transactionSeq = 2;
}

message AbortRes {
  bool isOk = 1;
  int64 transactionSeq = 2;
}
